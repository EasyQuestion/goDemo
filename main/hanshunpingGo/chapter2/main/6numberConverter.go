package main

import "fmt"

func main() {
	fmt.Println(-2 >> 2)
	fmt.Println(-2 << 2)
	fmt.Println(-2 / 4)
}

/*func main() {
	fmt.Println(2 & 3) // 2
	fmt.Println(2 | 3) /// 3
	fmt.Println(2 ^ 3) // 1
	fmt.Println(2 ^ -2) // -4
}*/

/*func main() {
	i := 5
	fmt.Printf("i=%b\n", i)

	j := 011
	fmt.Println("j=", j)

	k := 0x11
	fmt.Println("k=", k)
}*/

// 对于整数的进制转换
// 二进制：go中不能直接使用二进制来表示一个整数，沿用了C的特点
// 十进制
// 八进制 以数字0开头
// 十六进制 以 0x 或 0X 开头，不区分大小写

// 进制的转换
// 1.其它进制转十进制
// 2.十进制转其它进制
// 3.二进制转其他进制
//    2->8  二进制数，每三位一组，转成八进制
//    2->16 二进制数，每四们一组，转成十六进制
// 4.其它进制转二进制

//（原码、反码、补码）
// 对于有符号的而言：
// 1.二进制的最高位是符号位，0表示正数，1表示负数
// 2.正数的原码、反码、补码都一样
// 3.负数的反码：它的原码符号位不变，其它位取反
// 4.负数的补码：它的反码+1
// 5.0的反码、补码都是0
// 6.在计算机运算时，都是以补码的方式来运算的

// 位运算  & | ^ << >>
//   右移：符号位不变，低位溢出，用符号位补缺失的高位
//   左移：符号位不变，低位补0
// 二进制的运算
